apply(iris[, 1:4], 2, mean)
library(datasets)
data(mtcars)
detach(iris)
?mtcars
?tapply
tapply(mtcars$mpg, mtcars$cyl, mean)
mean(mtcars$hp[mtcars$cyl==8])
mean(mtcars$hp[mtcars$cyl==8]) - mean(mtcars$hp[mtcars$cyl==4])
?ls
debug(ls)
ls()
exit
?debug
?inverse
?solve
find.package()
install.packages("RMySQL")
ucscDB = dbConnect(MySQL(),user = "genome",host="genome-mysql.cse.ucsc.edu")
install.packages("RMySQL")
library(RMySQL)
ucscDB = dbConnect(MySQL(),user = "genome",host="genome-mysql.cse.ucsc.edu")
result = dbGetQuery(ucscDB,"show databases;",dbDisconnect(ucscDB))
result = dbGetQuery(ucscDB,"show databases;");dbDisconnect(ucscDB));
ucscDB = dbConnect(MySQL(),user = "genome",host="genome-mysql.cse.ucsc.edu")
result = dbGetQuery(ucscDB,"show databases;");dbDisconnect(ucscDB));
ucscDB = dbConnect(MySQL(),user = "genome",host="genome-mysql.cse.ucsc.edu")
result = dbGetQuery(ucscDB,"show databases;") ;dbDisconnect(ucscDB);
result
source("http://bioconductor.org/bioLite.R")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
created = h5createFile("example.h5")
library(rhdf5)
created = h5createFile("example.h5")
ls()
library(httr)
myapp <- oauth_app("github", "a8b894492c9e71587a4f13487626d78661cc2b0e")
oauth_endpoints("github")
myapp <- oauth_app("github", "a8b894492c9e71587a4f13487626d78661cc2b0e")
?Sys.setenv
Sys.setenv(GITHUB_CONSUMER_SECRET = "")
myapp <- oauth_app("github", "a8b894492c9e71587a4f13487626d78661cc2b0e")
?sign_oauth1.0
? oauth_app
myapp <- oauth_app("github", "f86edfac0713f3a71dc7", secret = "42a42a8c733b6445d6989ee635c68ff5058737c0")
oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
oauth2.0_token(oauth_endpoints("github"), myapp)
library(httr)#
library(httpuv)
oauth_endpoints("github")
myapp <- oauth_app("github", "a8b894492c9e71587a4f13487626d78661cc2b0e", secret = "42a42a8c733b6445d6989ee635c68ff5058737c0")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
Sys.setenv(secret = "42a42a8c733b6445d6989ee635c68ff5058737c0" )
myapp <- oauth_app("github", "a8b894492c9e71587a4f13487626d78661cc2b0e")
Sys.setenv(GITHUB_CONSUMER_SECRET = "42a42a8c733b6445d6989ee635c68ff5058737c0" )
myapp <- oauth_app("github", "a8b894492c9e71587a4f13487626d78661cc2b0e")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
Sys.setenv(GITHUB_CONSUMER_SECRET = "42a42a8c733b6445d6989ee635c68ff5058737c0" )
myapp <- oauth_app("github", "a8b894492c9e71587a4f13487626d78661cc2b0e")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
Sys.setenv(GITHUB_CONSUMER_SECRET = "00ff9e1446994340cf7bc88ef8d9deb076699837" )
myapp <- oauth_app("github", "a8b894492c9e71587a4f13487626d78661cc2b0e")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token
myapp <- oauth_app("github", "56b637a5baffac62cad9")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
myapp <- oauth_app("github", "f86edfac0713f3a71dc7")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/rate_limit", gtoken)
stop_for_status(req)
content(req)
class(req)
req
json1 = content(content)
json1 = content(req)
json1
json2 = jsonlite::fromJSON(toJSON(json1))
library(jsonlite)
json2 = jsonlite::fromJSON(toJSON(json1))
json2
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
content(req)
names(req)
json1 = content(req)#
json2 = jsonlite::fromJSON(toJSON(json1))
json2
names(json2)
head(json2)
names(json2)
json2[json2$names = datasharing]
json2[json2$names = "datasharing"]
json2[json2$names == "datasharing"]
json2[json2$name == "datasharing"]
json2[json2$name == "datasharing",]
?str
library(latice)
library(lattice)
x = rnorm(1:100)
y = rnorm(1:100)
y
rnorm(100)
xyplot(x,y)
?xyplot
z = as.data.frame(x,y)
z = as.data.frame("x" = x,"y" = y)
xyplot(x,y,z)
xyplot(y~x,z)
class(xyplot(y~x,z))
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
environment(trellis.par.set())
environment(print.trellis())
?trellis.par.set()
?splom()
?print.trellis
library(datasets)
data(airquality)
data(airquality)
library(ggplot2)
data(airquality)
qplot(Wind,Ozone,data = airquality, facets = .~factor(Month))
airquality = transform(airquality,Month = factor(Month))
qplot(Wind,Ozone,data = airquality, facets = .~factor(Month))
qplot(Wind,Ozone,data = airquality, facets = .~Month)
?transform
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
?geom_smooth
?legend
cur_dir = "/Users/student/Documents/Classes/JHDataScience/GettingData/Project/Repo/GettingData"
c(cur_dir,"UCI HAR Dataset")
paste(cur_dir,"UCI HAR Dataset")
cur_dir = "/Users/student/Documents/Classes/JHDataScience/GettingData/Project/Repo/GettingData"
main_dir = paste(cur_dir,"/UCI HAR Dataset")
main_dir = "/Users/student/Documents/Classes/JHDataScience/GettingData/Project/Repo/GettingData"
data_dir = paste(cur_dir,"/UCI HAR Dataset")
setwd(data_dir)
data_dir
?evaluate
?expression
x = expression(paste(cur_dir,"/UCI HAR Dataset"))
x
x = paste(cur_dir,"/UCI HAR Dataset"))
x = paste(cur_dir,"/UCI HAR Dataset")
x
data_dir
setwd(data_dir)
setwd(main_dir)
data_dir = paste(cur_dir,"/UCI_HAR_Dataset")
data_dir
setwd(data_dir)
data_dir = paste(main_dir,"/UCI_HAR_Dataset")
setwd(data_dir)
data_dir
?paste
data_dir = paste(main_dir,"/UCI_HAR_Dataset",sep = "")
setwd(data_dir)
data_dir = paste(main_dir,"/UCI HAR Dataset",sep = "")
setwd(data_dir)
test_dir = paste(data_dir,"/test",sep = "")
train_dir = paste(data_dir,"/train",sep = "")
setwd(data_dir)
?read.delim
activity_labels = read.table("activity_labels.txt")
View(activity_labels)
View(activity_labels)
View(activity_labels)
View(activity_labels)
?read.table
activity_labels = read.table("activity_labels.txt", col.names = c("number","label"))
View(activity_labels)
View(activity_labels)
activity_labels = read.table("activity_labels.txt", col.names = c("ID","label"))
feature_labels = read.table("features.txt", col.names = c("ID","label"))
View(feature_labels)
setwd(train_dir)
activity_labels = read.table("activity_labels.txt", col.names = c("ActID","ActLabel")) #relates activity IDs to activity label
feature_labels = read.table("features.txt", col.names = c("FeatID","FeatLabel")) #relates feature IDs to feature labels
#Go to training directory and get training data
setwd(train_dir)
TrainSs = read.table("subject_train.txt", col.names = "SsID")
setwd(data_dir)
activity_labels = read.table("activity_labels.txt", col.names = c("ActID","ActLabel")) #relates activity IDs to activity label
feature_labels = read.table("features.txt", col.names = c("FeatID","FeatLabel")) #relates feature IDs to feature labels
#Go to training directory and get training data
setwd(train_dir)
TrainSs = read.table("subject_train.txt", col.names = "SsID")
TrainData = read.table("X_train.txt")
View(TrainData)
View(feature_labels)
TrainData = read.table("X_train.txt",col.names = feature_labels$FeatLabel)
View(TrainData)
View(TrainData)
View(TrainData)
head(TrainData)
View(feature_labels)
train_data = read.table("X_train.txt",col.names = feature_labels$FeatLabel)
train_labels = read.table("y_train.txt")
View(train_labels)
View(train_labels)
class(train_labels)
?names
names(train_labels)
?levels
levels(train_labels)
class(c("a","b"))
levels(train_labels) = activity_labels
levels(train_labels) = as.character(activity_labels)
activity_labels
levels(train_labels) = as.character(activity_labels$ActLabel)
View(train_labels)
View(train_labels)
levels(train_labels) = (activity_labels$ActLabel)
z <- gl(3, 2, 12)
levels(z) <- list(A = c(1,3), B = 2)
z
?gl
class(train_labels)
class(train_labels$V1)
levels(as.factor(train_labels)) = (activity_labels$ActLabel)
train.labels = as.factor(train.labels)
train_labels = as.factor(train_labels)
train_labels = read.table("y_train.txt",colClasses = "factor")
class(train_labels$V1)
levels(train_labels) = (activity_labels$ActLabel)
train_Ss = read.table("subject_train.txt", col.names = "SsID")
?levels
levels(train_labels) = c("a","b","c","d","e","f")
levels(train_labels$V1) = c("a","b","c","d","e","f")
levels(train_labels)
levels(train_labels$V1)
levels(train_labels$V1)[1]
train_labels = read.table("y_train.txt",colClasses = "factor")
train_labels = read.table("y_train.txt",colClasses = "factor")
levels(train_labels$V1)[1]
levels(train_labels$V1)[1] = "Face"
train_labels[1]
View(train_labels)
View(train_labels)
train_labels = read.table("y_train.txt",colClasses = "factor")
levels(train_labels$V1) = activity_labels$ActLabel
View(train_labels)
View(train_labels)
?cbind
train = cbind(train_Ss,train_labels,train_data)
View(train)
View(train)
class(train)
View(train)
View(train)
setwd(test_dir)
test_Ss = read.table("subject_test.txt", col.names = "SsID") #read in subject data
test_data = read.table("X_test.txt",col.names = feature_labels$FeatLabel) # read in observations
test_labels = read.table("y_test.txt",colClasses = "factor",col.names = "Activity") #read in activitity numbers
levels(test_labels$Activity) = activity_labels$ActLabel #convert numbers to labels
test = cbind(test_Ss,test_labels,test_data) #combine training data into one data frame
View(test_Ss)
table(test_Ss)
table(train_Ss)
data = rbind(train,test)
View(train)
View(test)
train_labels = read.table("y_train.txt",colClasses = "factor",col.names = "Activity") #read in activitity numbers
levels(train_labels$Activity) = activity_labels$ActLabel #convert numbers to labels
train = cbind(train_Ss,train_labels,train_data) #combine training data into one data frame
data = rbind(train,test)
View(train)
setwd(train_dir)
train_labels = read.table("y_train.txt",colClasses = "factor",col.names = "Activity") #read in activitity numbers
levels(train_labels$Activity) = activity_labels$ActLabel #convert numbers to labels
train = cbind(train_Ss,train_labels,train_data) #combine training data into one data frame
data = rbind(train,test)
View(data)
?grep
names(data)
data_names = names(data)
data_names[grep("Mean")]
data_names[grep(data_names,"Mean")]
?grep
data_names[grep("Mean",data_names)]
View(feature_labels)
View(feature_labels)
data_names[grep(c("Mean","mean"),data_names)]
data_names[grep(data_names,"mean")]
data_names[grep("mean",data_names)]
data_names[grep("std",data_names)]
data_names[grep("STD",data_names)]
data_names[grep("Std",data_names)]
data_names[grep("MEAN",data_names)]
data_names[grepl("std",data_names)]
grepl("std",data_names)
mean_SD_data = data[,grepl("std",data_names)|grepl("mean",data_names)|grepl("Mean",data_names)]
View(mean_SD_data)
View(data)
mean_SD_data = data[,grepl("std",data_names)|grepl("mean",data_names)|grepl("Mean",data_names)|grepl("SsID",data_names)|grepl("Activity",data_names)]
View(mean_SD_data)
?tapply
tapply(mean_SD_data,c(SsID,Activity),FUN = mean)
tapply(mean_SD_data$tBodyAcc.mean...X,c(SsID,Activity),FUN = mean)
tapply(mean_SD_data$tBodyAcc.mean...X,c(mean_SD_data$SsID,mean_SD_data$Activity),FUN = mean)
tapply(mean_SD_data$tBodyAcc.mean...X,mean_SD_data$SsID,FUN = mean)
tapply(mean_SD_data,mean_SD_data$SsID,FUN = mean)
?rep
?Match
?match
tapply(mean_SD_data,mean_SD_data$SsID,FUN = mean)
?lapply
lapply(mean_SD_data,FUN = mean)
a = lapply(mean_SD_data,FUN = mean)
?subset
?split
b = split(mean_SD_data,SsID)
b = split(mean_SD_data,mean_SD_data$SsID)
head(B)
head(b)
summary(b)
b[1]
head(b[1])
summary(b)
?melt
library(reshape2)
?melt
?dcast
?split
x = split(mean_SD_data,mean_SD_data$SsID)
summary(x)
lapply(b,mean)
?melt
View(mean_SD_data)
bmelt = melt(mean_SD_data,id.vars = c("SsID","Activity")
)
View(bmelt)
tBodyAcc.mean...X
?dcast
dcast(bmelt,SsID~Activity)
dcast(bmelt,SsID~Activity,mean)
dcast(bmelt,SsID~Activity+Variable,mean)
dcast(bmelt,SsID~Activity+variable,mean)
bdcast = dcast(bmelt,SsID~Activity+variable,mean)
View(bdcast)
View(bdcast)
mean_SD_data[SsID ==1 & Activity == "WALKING"]
mean_SD_data[mean_SD_data$SsID ==1 & mean_SD_data$Activity == "WALKING"]
mean_SD_data[mean_SD_data$SsID ==1 & mean_SD_data$Activity == "WALKING",3]
mean_SD_data[mean_SD_data$SsID ==1 & mean_SD_data$Activity == "WALKING",mean_SD_data$tBodyAcc.mean...X]
mean_SD_data$tBodyAcc.mean...X[mean_SD_data$SsID ==1 & mean_SD_data$Activity == "WALKING",]
mean_SD_data$tBodyAcc.mean...X[mean_SD_data$SsID ==1 & mean_SD_data$Activity == "WALKING"]
mean(mean_SD_data$tBodyAcc.mean...X[mean_SD_data$SsID ==1 & mean_SD_data$Activity == "WALKING"])
mean(mean_SD_data$tBodyAcc.mean...X[mean_SD_data$SsID ==2 & mean_SD_data$Activity == "WALKING"])
mean_melt = melt(mean_SD_data,id.vars = c("SsID","Activity")
mean_cast = dcast(bmelt,SsID~Activity+variable,mean)
mean_cast = dcast(mean_melt,SsID~Activity+variable,mean)
mean_melt = melt(mean_SD_data,id.vars = c("SsID","Activity")
bmelt = melt(mean_SD_data,id.vars = c("SsID","Activity"))
mean_melt = melt(mean_SD_data,id.vars = c("SsID","Activity"))
mean_cast = dcast(mean_melt,SsID~Activity+variable,mean)
View(mean_cast)
?write.table
write.table(mean_case,file = "samsung_tidy_data.txt")
write.table(mean_cast,file = "samsung_tidy_data.txt")
setwd("main_dir")
write.table(mean_cast,file = "samsung_tidy_data.txt")
main_dir = "/Users/student/Documents/Classes/JHDataScience/GettingData/Project/Repo/GettingData" #location of r file
data_dir = paste(main_dir,"/UCI HAR Dataset",sep = "")
test_dir = paste(data_dir,"/test",sep = "")
train_dir = paste(data_dir,"/train",sep = "")
setwd("main_dir")
write.table(mean_cast,file = "samsung_tidy_data.txt")
main_dir
getwd()
setwd(main_dir)
write.table(mean_cast,file = "samsung_tidy_data.txt")
View(test_labels)
View(feature_labels)
write.table(mean_cast,file = "samsung_tidy_data.txt",sep = "\t")
?sub
sub("Body","Bd",feature_labels)
gsub("Body","Bd",feature_labels)
gsub("Body","Bd",feature_labels$FeatLabel)
feature_labels$FeatLabel = gsub("Body","Bd",feature_labels$FeatLabel)
View(feature_labels)
View(feature_labels)
feature_labels$FeatLabel = gsub("()","",feature_labels$FeatLabel)
View(feature_labels)
View(feature_labels)
feature_labels$FeatLabel = gsub("()","",feature_labels$FeatLabel)
View(feature_labels)
View(feature_labels)
feature_labels$FeatLabel = gsub("Bd","",feature_labels$FeatLabel)
View(feature_labels)
View(feature_labels)
feature_labels$FeatLabel[1]
feature_labels$FeatLabel[1][3]
feature_labels$FeatLabel = gsub("()","",feature_labels$FeatLabel)
feature_labels$FeatLabel[1]
View(test_labels)
View(test_labels)
View(test_data)
View(test_data)
?read.table
?make.names
View(feature_labels)
View(feature_labels)
feature_labels$FeatLabel[1]
class(feature_labels$FeatLabel[1])
substr(feature_labels$FeatLabel[1],6,7)
substr(feature_labels$FeatLabel[1],10,11)
feature_labels = read.table("features.txt", col.names = c("FeatID","FeatLabel")) #relates feature IDs to feature labels
setwd(data_dir)
feature_labels = read.table("features.txt", col.names = c("FeatID","FeatLabel")) #relates feature IDs to feature labels
substr(feature_labels$FeatLabel[1],10,11)
substr(feature_labels$FeatLabel[1],14,15)
View(feature_labels)
View(feature_labels)
feature_labels$FeatLabel = gsub(substr(feature_labels$FeatLabel[1],14,15),"",feature_labels$FeatLabel)
View(feature_labels)
View(feature_labels)
feature_labels$FeatLabel = gsub("mean()","mean",feature_labels$FeatLabel)
View(feature_labels)
View(feature_labels)
feature_labels$FeatLabel = gsub(substr(feature_labels$FeatLabel[1],14,15),"mean",feature_labels$FeatLabel)
View(feature_labels)
View(feature_labels)
feature_labels$FeatLabel = gsub("/()","mean",feature_labels$FeatLabel)
View(mean_cast)
View(mean_cast)
View(feature_labels)
View(feature_labels)
feature_labels = read.table("features.txt", col.names = c("FeatID","FeatLabel"))
feature_labels$FeatLabel = gsub("\()","mean",feature_labels$FeatLabel)
?grep
feature_labels$FeatLabel = gsub("()","mean",feature_labels$FeatLabel,fixed = TRUE)
View(feature_labels)
View(feature_labels)
feature_labels = read.table("features.txt", col.names = c("FeatID","FeatLabel")) #relates feature IDs to feature labels
#Clean up feature labels
feature_labels$FeatLabel = gsub("()","",feature_labels$FeatLabel,fixed = TRUE) #remove parentheses
feature_labels$FeatLabel = gsub(",",".",feature_labels$FeatLabel,fixed = TRUE) #change comma to period
train_data = read.table("X_train.txt",col.names = feature_labels$FeatLabel) # read in observations
setwd(train_dir)
train_Ss = read.table("subject_train.txt", col.names = "SsID") #read in subject data
train_data = read.table("X_train.txt",col.names = feature_labels$FeatLabel) # read in observations
View(train_data)
View(train_data)
#Getting Data Project
#Set file directories
main_dir = "/Users/student/Documents/Classes/JHDataScience/GettingData/Project/Repo/GettingData" #location of r file
data_dir = paste(main_dir,"/UCI HAR Dataset",sep = "")
test_dir = paste(data_dir,"/test",sep = "")
train_dir = paste(data_dir,"/train",sep = "")
#read in data
#Go to data directory and get labels
setwd(data_dir)
activity_labels = read.table("activity_labels.txt", col.names = c("ActID","ActLabel")) #relates activity IDs to activity label
feature_labels = read.table("features.txt", col.names = c("FeatID","FeatLabel")) #relates feature IDs to feature labels
#Clean up feature labels. Parentheses and commas are not allowed as element names
feature_labels$FeatLabel = gsub("()","",feature_labels$FeatLabel,fixed = TRUE) #remove parentheses
feature_labels$FeatLabel = gsub(",",".",feature_labels$FeatLabel,fixed = TRUE) #change comma to period
#Go to training directory and get training data
setwd(train_dir)
train_Ss = read.table("subject_train.txt", col.names = "SsID") #read in subject data
train_data = read.table("X_train.txt",col.names = feature_labels$FeatLabel) # read in observations
train_labels = read.table("y_train.txt",colClasses = "factor",col.names = "Activity") #read in activitity numbers
levels(train_labels$Activity) = activity_labels$ActLabel #convert numbers to labels
train = cbind(train_Ss,train_labels,train_data) #combine training data into one data frame
#Go to testing directory and get testing data
setwd(test_dir)
test_Ss = read.table("subject_test.txt", col.names = "SsID") #read in subject data
test_data = read.table("X_test.txt",col.names = feature_labels$FeatLabel) # read in observations
test_labels = read.table("y_test.txt",colClasses = "factor",col.names = "Activity") #read in activitity numbers
levels(test_labels$Activity) = activity_labels$ActLabel #convert numbers to labels
test = cbind(test_Ss,test_labels,test_data) #combine training data into one data frame
#Combine test and training data
data = rbind(train,test)
#Extract mean and standard deviation measurements. These variables include, "mean" or "std" in the title.
data_names = names(data)
mean_SD_data = data[,grepl("std",data_names)|grepl("mean",data_names)|grepl("SsID",data_names)|grepl("Activity",data_names)]
#Create new data set with the average of each variable for each activity and each subject.
library(reshape2)
mean_melt = melt(mean_SD_data,id.vars = c("SsID","Activity"))
mean_cast = dcast(mean_melt,SsID~Activity+variable,mean)
setwd(main_dir)
write.table(mean_cast,file = "samsung_tidy_data.txt",sep = "\t")
View(mean_cast)
View(mean_cast)
write.table(mean_cast,file = "samsung_tidy_data.txt",sep = "\t")
write.table(mean_cast,file = "samsung_tidy_data.txt")
View(mean_SD_data)
View(mean_cast)
?write.table
write.csv(mean_cast,file = "samsung_tidy_data.txt")
View(mean_SD_data)
View(mean_SD_data)
View(mean_melt)
View(mean_cast)
?write.csv
write.csv(mean_cast,file = "samsung_tidy_data.txt",row.names = FALSE)
